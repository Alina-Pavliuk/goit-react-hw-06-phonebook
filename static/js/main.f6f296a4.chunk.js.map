{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/App.module.css","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","redux/action/contacts.js","Components/App.js","redux/reducer/contacts.js","redux/store.js","index.js"],"names":["module","exports","initialState","number","name","ContactForm","setAlert","addContact","contacts","useState","stateForm","setStateForm","handlerInput","target","value","className","styles","onSubmit","e","preventDefault","singleContact","some","contact","titleLabel","inputForm","type","placeholder","onChange","formButton","Filter","filter","filterHandler","wrapperSearch","filterLabel_span","filterInput","ContactItem","id","removeContact","contactItem","paragraph","removeBtn","onClick","createAction","contactObj","payload","uuidv4","setContacts","editInputFilter","App","useSelector","state","items","dispatch","useDispatch","start","setStart","alert","firstRender","useRef","useEffect","current","localStorage","setItem","JSON","stringify","persistedContacts","getItem","actions","parse","filteredContacts","toLowerCase","includes","filterContacts","stylesApp","wrapper","CSSTransition","classNames","enterActive","alertBoxEnterActive","exitActive","alertBoxExitActive","mountOnEnter","unmountOnExit","timeout","in","alertBox","alertBtn","titleEnterActive","title","TransitionGroup","contactsList","component","map","listItemEnterActive","listItemExitActive","createReducer","el","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6f296a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__D_wUJ\",\"listItemEnterActive\":\"ContactItem_listItemEnterActive__28bVf\",\"task\":\"ContactItem_task__20LfY\",\"listItemExitActive\":\"ContactItem_listItemExitActive__1wZ3F\",\"hinge\":\"ContactItem_hinge__m3PqO\",\"removeBtn\":\"ContactItem_removeBtn__29UAM\",\"paragraph\":\"ContactItem_paragraph__1OKz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3tY0G\",\"formButton\":\"App_formButton__2c67t\",\"title\":\"App_title__3V7C6\",\"titleEnterActive\":\"App_titleEnterActive__3N9_4\",\"task\":\"App_task__27kAO\",\"contactsList\":\"App_contactsList__2K84T\",\"alertBox\":\"App_alertBox__1Gmo0\",\"alertBoxEnterActive\":\"App_alertBoxEnterActive__3Ldyv\",\"alertBoxExitActive\":\"App_alertBoxExitActive__1s6lO\",\"hinge\":\"App_hinge__Gxptf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__212Qj\",\"titleLabel\":\"ContactForm_titleLabel__2badp\",\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\",\"filterLabel_span\":\"Filter_filterLabel_span__oJAe_\",\"wrapperSearch\":\"Filter_wrapperSearch__3WE7k\"};","import React, { useState } from 'react';\n\nimport styles from './ContactForm.module.css';\n\nconst initialState = {\n  number: \"\",\n  name: \"\",\n}\n\nconst ContactForm = ({ setAlert, addContact, contacts }) => {\n  const [stateForm, setStateForm] = useState(initialState);\n  const { name, number } = stateForm;\n\n  const handlerInput = ({ target }) => {\n    const { name, value } = target;\n    setStateForm({ ...stateForm, [name]: value });\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const singleContact = {\n      name: name.value,\n      number: number.value,\n    }\n    if (contacts.some(contact => contact.name === name.value)) {\n      setAlert(true)\n    } else {\n      addContact(singleContact)\n      setStateForm({ ...initialState })\n    }\n  }\n\n  return (\n    <form className={styles.ContactForm} onSubmit={submitHandler}>\n      <label>\n        <span className={styles.titleLabel}>Name</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={handlerInput}\n        />\n      </label>\n      <label>\n        <span className={styles.titleLabel}> Number</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={number}\n          name=\"number\"\n          placeholder=\"Number\"\n          onChange={handlerInput}\n        />\n      </label>\n      <button className={styles.formButton} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, filterHandler }) => (\n  <>\n    <div className={styles.wrapperSearch}>\n      <label>\n        <span className={styles.filterLabel_span}> Find contacts by name</span>\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={filterHandler}\n          placeholder=\"Search\"\n        />\n      </label>\n    </div>\n  </>\n);\n\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport styles from './ContactItem.module.css'\n\n\nconst ContactItem = ({ id, name, number, removeContact }) => (\n  <li className={styles.contactItem}>\n    <p className={styles.paragraph}>{name}: {number}</p>\n    <button\n      className={styles.removeBtn}\n      type=\"button\"\n      onClick={removeContact(id)}>\n      X\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  removeContact: PropTypes.func.isRequired\n}","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('contacts/add', contactObj => ({\n  payload: {\n    ...contactObj,\n    id: uuidv4()\n  }\n}));\n\nexport const removeContact = createAction('contacts/remove');\nexport const setContacts = createAction('contacts/set');\nexport const editInputFilter = createAction('filter/edit');\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport stylesApp from './App.module.css';\nimport styles from './ContactItem/ContactItem.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactItem from '../Components/ContactItem/ContactItem';\n\nimport * as actions from '../redux/action/contacts';\n\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n}\n\nconst App = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const [start, setStart] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  const firstRender = useRef(false);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    } else {\n      firstRender.current = true;\n    }\n  }, [contacts]);\n\n  useEffect(() => {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      dispatch(actions.setContacts(JSON.parse(persistedContacts)));\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    setStart(true);\n  }, [])\n\n  const filterHandler = (e) => {\n    dispatch(actions.editInputFilter(e.target.value));\n  }\n\n  const removeContact = (id) => (e) => {\n    dispatch(actions.removeContact(id));\n  }\n\n  const addContact = (singleContact) => {\n    dispatch(actions.addContact(singleContact))\n  }\n\n  const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <div className={stylesApp.wrapper}>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.alertBoxEnterActive,\n        exitActive: stylesApp.alertBoxExitActive\n      }}\n        mountOnEnter\n        unmountOnExit\n        timeout={300}\n        in={alert}>\n\n        <div className={stylesApp.alertBox}>\n          <h2>{`The name is already a contact`}</h2>\n          <button\n            onClick={() => setAlert(false)}\n            className={styles.alertBtn}\n            type=\"button\"\n          >X\n          </button>\n        </div>\n      </CSSTransition>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.titleEnterActive,\n      }} timeout={800} in={start}>\n        <h2 className={stylesApp.title}>Phonebook </h2>\n      </CSSTransition>\n\n      <ContactForm setAlert={setAlert} addContact={addContact} contacts={contacts} />\n      <Filter filter={filter} filterHandler={filterHandler} />\n\n      <TransitionGroup className={stylesApp.contactsList} component=\"ul\">\n        {filteredContacts.map(contact =>\n          <CSSTransition\n            key={contact.id}\n            timeout={800}\n            classNames={{\n              enterActive: styles.listItemEnterActive,\n              exitActive: styles.listItemExitActive,\n            }}\n          >\n            <ContactItem {...contact} removeContact={removeContact} />\n          </CSSTransition>\n        )}\n\n      </TransitionGroup>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport {\n  addContact,\n  removeContact,\n  setContacts,\n  editInputFilter\n} from '../action/contacts';\n\nconst initialState = {\n  items: [],\n  filter: ''\n};\n\nexport default createReducer(initialState, {\n  [addContact]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n  [setContacts]: (state, { payload }) => ({\n    ...state,\n    items: [...payload],\n  }),\n  [removeContact]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter(el => el.id !== payload),\n  }),\n  [editInputFilter]: (state, { payload }) => ({\n    ...state,\n    filter: payload,\n  }),\n})\n","import { configureStore } from '@reduxjs/toolkit';\nimport contacts from './reducer/contacts';\n\nconst store = configureStore({\n  reducer: {\n    contacts,\n  }\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}