{"version":3,"sources":["Components/App.module.css","Components/ContactForm/ContactForm.module.css","Components/Filter/Filter.module.css","redux/constants/index.js","Components/ContactForm/ContactForm.js","redux/action/contacts.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","Components/App.js","redux/reducer/contacts.js","redux/reducer/rootReducer.js","redux/store.js","index.js","Components/ContactItem/ContactItem.module.css"],"names":["module","exports","EDIT_FILTER","SET_CONTACTS","ADD_CONTACT","REMOVE_CONTACT","initialState","number","name","ContactForm","setAlert","dispatch","useDispatch","contacts","useSelector","state","items","useState","stateForm","setStateForm","handlerInput","target","value","className","styles","onSubmit","e","preventDefault","contactObj","singleContact","some","contact","type","payload","id","uuidv4","titleLabel","inputForm","placeholder","onChange","formButton","Filter","filter","filterHandler","wrapperSearch","filterLabel_span","filterInput","ContactItem","removeContact","contactItem","paragraph","removeBtn","onClick","App","start","setStart","alert","firstRender","useRef","useEffect","current","localStorage","setItem","JSON","stringify","arr","persistedContacts","getItem","parse","actions","filteredContacts","toLowerCase","includes","filterContacts","stylesApp","wrapper","CSSTransition","classNames","enterActive","alertBoxEnterActive","exitActive","alertBoxExitActive","mountOnEnter","unmountOnExit","timeout","in","alertBox","alertBtn","titleEnterActive","title","TransitionGroup","contactsList","component","map","listItemEnterActive","listItemExitActive","rootReducer","combineReducers","action","el","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90701993.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__3tY0G\",\"formButton\":\"App_formButton__2c67t\",\"title\":\"App_title__3V7C6\",\"titleEnterActive\":\"App_titleEnterActive__3N9_4\",\"task\":\"App_task__27kAO\",\"contactsList\":\"App_contactsList__2K84T\",\"alertBox\":\"App_alertBox__1Gmo0\",\"alertBoxEnterActive\":\"App_alertBoxEnterActive__3Ldyv\",\"alertBoxExitActive\":\"App_alertBoxExitActive__1s6lO\",\"hinge\":\"App_hinge__Gxptf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__212Qj\",\"titleLabel\":\"ContactForm_titleLabel__2badp\",\"inputForm\":\"ContactForm_inputForm__2de9Q\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\",\"filterLabel_span\":\"Filter_filterLabel_span__oJAe_\",\"wrapperSearch\":\"Filter_wrapperSearch__3WE7k\"};","export const EDIT_FILTER = 'filter/edit';\n\nexport const SET_CONTACTS = 'contacts/set';\nexport const ADD_CONTACT = 'contacts/add';\nexport const REMOVE_CONTACT = 'contacts/remove';","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport styles from './ContactForm.module.css';\n\nimport { addContact } from '../../redux/action/contacts';\n\nconst initialState = {\n  number: \"\",\n  name: \"\",\n}\n\nconst ContactForm = ({ setAlert }) => {\n  const dispatch = useDispatch()\n  const contacts = useSelector(state => state.contacts.items)\n\n  const [stateForm, setStateForm] = useState(initialState);\n  const { name, number } = stateForm;\n\n  const handlerInput = ({ target }) => {\n    const { name, value } = target;\n    setStateForm({ ...stateForm, [name]: value });\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target;\n    const singleContact = {\n      name: name.value,\n      number: number.value,\n    }\n    if (contacts.some(contact => contact.name === name.value)) {\n      setAlert(true)\n    } else {\n      dispatch(addContact(singleContact))\n      setStateForm({ ...initialState })\n    }\n\n  }\n\n  return (\n    <form className={styles.ContactForm} onSubmit={submitHandler}>\n      <label>\n        <span className={styles.titleLabel}>Name</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Name\"\n          onChange={handlerInput}\n        />\n      </label>\n      <label>\n        <span className={styles.titleLabel}> Number</span>\n        <input\n          className={styles.inputForm}\n          type=\"text\"\n          value={number}\n          name=\"number\"\n          placeholder=\"Number\"\n          onChange={handlerInput}\n        />\n      </label>\n      <button className={styles.formButton} type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\n\nexport default ContactForm;\n\n","import { ADD_CONTACT, SET_CONTACTS, REMOVE_CONTACT, EDIT_FILTER } from '../constants/index.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = (contactObj) => ({\n  type: ADD_CONTACT,\n  payload: { ...contactObj, id: uuidv4() }\n})\n\nexport const setContacts = (arr) => ({\n  type: SET_CONTACTS,\n  payload: arr\n})\n\nexport const removeContact = (id) => ({\n  type: REMOVE_CONTACT,\n  payload: id\n})\n\nexport const editInputFilter = (value) => ({\n  type: EDIT_FILTER,\n  payload: value,\n})\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport styles from './Filter.module.css'\n\nconst Filter = ({ filter, filterHandler }) => (\n  <>\n    <div className={styles.wrapperSearch}>\n      <label>\n        <span className={styles.filterLabel_span}> Find contacts by name</span>\n        <input\n          className={styles.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={filterHandler}\n          placeholder=\"Search\"\n        />\n      </label>\n    </div>\n  </>\n);\n\n\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  filterHandler: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport styles from './ContactItem.module.css'\n\n\nconst ContactItem = ({ id, name, number, removeContact }) => (\n  <li className={styles.contactItem}>\n    <p className={styles.paragraph}>{name}: {number}</p>\n    <button\n      className={styles.removeBtn}\n      type=\"button\"\n      onClick={removeContact(id)}>\n      X\n    </button>\n  </li>\n);\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  // id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string,\n  // removeContact: PropTypes.func.isRequired\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport stylesApp from './App.module.css';\nimport styles from './ContactItem/ContactItem.module.css';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactItem from '../Components/ContactItem/ContactItem';\n\nimport * as actions from '../redux/action/contacts';\n\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n}\n\nconst App = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const [start, setStart] = useState(false);\n  const [alert, setAlert] = useState(false);\n\n  const firstRender = useRef(false);\n\n  useEffect(() => {\n    if (firstRender.current) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    } else {\n      firstRender.current = true;\n    }\n  }, [contacts]);\n\n  useEffect(() => {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      dispatch(actions.setContacts(JSON.parse(persistedContacts)));\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    setStart(true);\n  }, [])\n\n  // useEffect(() => {\n  // if (filterContacts(contacts, filter).length === 0) {\n  //   setFilter('')\n  // }\n  // }, [contacts])\n\n\n  const filterHandler = (e) => {\n    dispatch(actions.editInputFilter(e.target.value));\n  }\n\n  const removeContact = (id) => (e) => {\n    dispatch(actions.removeContact(id));\n  }\n\n  const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <div className={stylesApp.wrapper}>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.alertBoxEnterActive,\n        exitActive: stylesApp.alertBoxExitActive\n      }}\n        mountOnEnter\n        unmountOnExit\n        timeout={300}\n        in={alert}>\n\n        <div className={stylesApp.alertBox}>\n          <h2>{`The name is already a contact`}</h2>\n          <button\n            onClick={() => setAlert(false)}\n            className={styles.alertBtn}\n            type=\"button\"\n          >X\n          </button>\n        </div>\n      </CSSTransition>\n      <CSSTransition classNames={{\n        enterActive: stylesApp.titleEnterActive,\n      }} timeout={800} in={start}>\n        <h2 className={stylesApp.title}>Phonebook </h2>\n      </CSSTransition>\n\n      <ContactForm setAlert={setAlert} />\n      <Filter filter={filter} filterHandler={filterHandler} />\n\n      <TransitionGroup className={stylesApp.contactsList} component=\"ul\">\n        {filteredContacts.map(contact =>\n          <CSSTransition\n            key={contact.id}\n            timeout={800}\n            classNames={{\n              enterActive: styles.listItemEnterActive,\n              exitActive: styles.listItemExitActive,\n            }}\n          >\n            <ContactItem {...contact} removeContact={removeContact} />\n          </CSSTransition>\n        )}\n\n      </TransitionGroup>\n\n    </div>\n  );\n\n}\n\nexport default App;\n","import {\n  ADD_CONTACT,\n  SET_CONTACTS,\n  REMOVE_CONTACT,\n  EDIT_FILTER\n} from '../constants/index.js'\n\nconst initialState = {\n  items: [],\n  filter: ''\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return ({\n        ...state,\n        items: [...state.items, action.payload],\n      })\n    case SET_CONTACTS:\n      return ({\n        ...state,\n        items: [...action.payload],\n      })\n    case REMOVE_CONTACT:\n      return ({\n        ...state,\n        items: state.items.filter(el => el.id !== action.payload),\n      })\n    case EDIT_FILTER:\n      return ({\n        ...state,\n        filter: action.payload\n      })\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport contacts from './contacts';\n\nconst rootReducer = combineReducers({\n  contacts,\n})\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducer/rootReducer.js';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__D_wUJ\",\"listItemEnterActive\":\"ContactItem_listItemEnterActive__28bVf\",\"task\":\"ContactItem_task__20LfY\",\"listItemExitActive\":\"ContactItem_listItemExitActive__1wZ3F\",\"hinge\":\"ContactItem_hinge__m3PqO\",\"removeBtn\":\"ContactItem_removeBtn__29UAM\",\"paragraph\":\"ContactItem_paragraph__1OKz_\"};"],"sourceRoot":""}